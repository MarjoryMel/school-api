{
  "openapi": "3.0.0",
  "info": {
    "title": "School API",
    "description": "API for managing school operations, including user management, professors, students, and courses.\n\n**Note**: The IDs shown in this documentation are fictitious examples. Each time the database is installed, new IDs are generated. To use the API correctly, you must use valid IDs, which can be obtained by listing the entities or directly from the database.\n\n**GitHub**: [https://github.com/MarjoryMel/school-api](https://github.com/MarjoryMel/school-api) \n\n**Linkedin**: [https://www.linkedin.com/in/marjorymell/](https://www.linkedin.com/in/marjorymell/)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/"
    }
  ],
  "tags": [
    {
      "name": "install",
      "description": "Database installation and setup"
    },
    {
      "name": "user",
      "description": "User-related operations"
    },
    {
      "name": "professor",
      "description": "Professor-related operations"
    },
    {
      "name": "student",
      "description": "Student-related operations"
    },
    {
      "name": "course",
      "description": "Course-related operations"
    }
  ],
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter your bearer token in the format **Bearer <token>**. Token is valid for 1 hour."
      }
    }
  },
  "paths": {
    "/install": {
      "get": {
        "tags": ["install"],
        "summary": "Install the database",
        "description": "Initialize and install data in the database.",
        "operationId": "installDatabase",
        "responses": {
          "200": {
            "description": "Database installed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Database installed successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["user"],
        "summary": "Register a new user",
        "description": "Register a new user with a username, email, and password.",
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "newuser"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "newuser@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "password1"
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "66cf2c0df4002574697e13af"
                        },
                        "username": {
                          "type": "string",
                          "example": "newuser"
                        },
                        "email": {
                          "type": "string",
                          "example": "newuser@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User with this email or username already exists"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["user"],
        "summary": "Log in a user",
        "description": "Log in a user and return a JWT token.**Token is valid for 1 hour.**",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example" : "admin"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example" : "adminpass"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NmNmMmMwZGY0MDAyNTc0Njk3ZTEzYTYiLCJpc0FkbWluIjp0cnVlLCJpYXQiOjE3MjQ4NTc1NTAsImV4cCI6MTcyNDg2MTE1MH0.QgG7SWKzKMz6FHPIVJUN-UU95BYShwmobdgob1b0L-o"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "66cf2c0df4002574697e13af"
                        },
                        "username": {
                          "type": "string",
                          "example": "admin"
                        },
                        "email": {
                          "type": "string",
                          "example": "admin@example.com"
                        },
                        "isAdmin": {
                          "type": "boolean"
                        },
                        "isProfessor": {
                          "type": "boolean"
                        },
                        "professor": {
                          "type": "object",
                          "properties": {
                            "firstName": {
                              "type": "string",
                              "example": "User"
                            },
                            "lastName": {
                              "type": "string",
                              "example": "Admin"
                            },
                            "department": {
                              "type": "string",
                              "example": "Administration"
                            },
                            "courses": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "officeLocation": {
                              "type": "string",
                              "example": "Room 111"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid username or password"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/users/admin": {
      "post": {
        "tags": ["user"],
        "summary": "Create a new administrator",
        "description": "Create a new admin user. Only accessible by existing admins.",
        "operationId": "createAdmin",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example" : "newadmin"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example" : "newadmin@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example" : "adminpass"
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Admin created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Admin created successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "66cf2c0df4002574697e13af"
                        },
                        "username": {
                          "type": "string",
                          "example": "newadmin"
                        },
                        "email": {
                          "type": "string",
                          "example": "newadmin@example.com"
                        },
                        "isAdmin": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User with this email or username already exists"
          },
          "403": {
            "description": "Access denied. Admins only"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "tags": ["user"],
        "summary": "Delete a user",
        "description": "Delete a user by ID. Only accessible by admins.",
        "operationId": "deleteUser",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "\n\n**The ID used in this endpoint is an example.** To use this endpoint correctly, you must provide one that is present in the database.",
            "required": true,
            "schema": {
              "type": "string",
              "example" : "66ce82472f34ff599a6acb26"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied. Admins only"
          },
          "404": {
            "description": "User not found"
          },
          "409": {
            "description": "Admin users cannot be deleted by other admins"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      },
      "put": {
        "tags": ["user"],
        "summary": "Update user data",
        "description": "Update user data. Accessible by the user themselves or by admins.",
        "operationId": "updateUser",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "\n\n**The ID used in this endpoint is an example.** To use this endpoint correctly, you must provide one that is present in the database.",
            "required": true,
            "schema": {
              "type": "string",
              "example" : "66ce83406d631c28dd300feb"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example" : "userupdate"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example" : "userupdate@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example" : "password1"
                  }
                },
                "required": [
                  "username",
                  "email"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User updated successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example" : "66ce83406d631c28dd300feb"
                        },
                        "username": {
                          "type": "string",
                          "example" : "userupdate"
                        },
                        "email": {
                          "type": "string",
                          "example" : "userupdate@example.com"
                        },
                        "isAdmin": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error occurred"
          },
          "403": {
            "description": "Access denied. Admins only"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/users/list": {
      "get": {
        "tags": ["user"],
        "summary": "List all users",
        "description": "Retrieve a list of all users. Accessible by admins only.",
        "operationId": "listUsers",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of users to return",
            "schema": {
              "type": "integer",
              "enum": [5, 10, 30]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Professors listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Users listed successfully"
                    },
                    "totalUsers": {
                      "type": "integer",
                      "example": "5"
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": "1"
                    },
                    "currentPage": {
                      "type": "integer",
                      "example": "1"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "66cf2c0df4002574697e13af"
                          },
                          "username": {
                            "type": "string",
                            "example": "admin"
                          },
                          "email": {
                            "type": "string",
                            "example": "admin@example.com"
                          },
                          "isAdmin": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid limit or page parameter"
          },
          "403": {
            "description": "Access denied. Admins only"
          },
          "404": {
            "description": "No records found for the requested page. Ensure that the page number is within the valid range"
          },
          "409": {
            "description": "There is no user registered in the system"
          },
          "500": {
            "description": "An internal server error"
          }
        }
      }
    },
    "/professor": {
      "post": {
        "tags": ["professor"],
        "summary": "Create a new professor",
        "description": "Create a new professor. Only accessible by admins.",
        "operationId": "createProfessor",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "example" : "66cf26fc858342d14a49f2b5"
                  },
                  "firstName": {
                    "type": "string",
                    "example" : "User"
                  },
                  "lastName": {
                    "type": "string",
                    "example" : "Professor"
                  },
                  "courses": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example" : "66cf26fc858342d14a49f2b8"
                    }
                  },
                  "officeLocation": {
                    "type": "string",
                    "example" : "Room 106"
                  }
                },
                "required": [
                  "userId",
                  "firstName",
                  "lastName"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Professor created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Professor created successfully"
                    },
                    "professor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example" : "66cf2c0df4002574697e13af"
                        },
                        "userId": {
                          "type": "string",
                          "example" : "66cf26fc858342d14a49f2b5"
                        },
                        "firstName": {
                          "type": "string",
                          "example" : "User"
                        },
                        "lastName": {
                          "type": "string",
                          "example" : "Professor"
                        },
                        "courses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "66cf26fc858342d14a49f2b8"
                              },
                              "title": {
                                "type": "string",
                                "example": "Mathematics"
                              }
                            }
                          }
                        },
                        "officeLocation": {
                          "type": "string",
                          "example": "Room 106"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error occurred"
          },
          "403": {
            "description": "Access denied. Admins only"
          },
          "404": {
            "description": "User not found"
          },
          "409": {
            "description": "User is already a professor"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/professor/{id}": {
      "get": {
        "tags": ["professor"],
        "summary": "Get professor details",
        "description": "Retrieve a teacher's data by ID, authenticated users only.",
        "operationId": "getProfessor",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "\n\n**The ID used in this endpoint is an example.** To use this endpoint correctly, you must provide one that is present in the database. In this case it is the **entity ID**, Professor.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66cf26fc858342d14a49f2be"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Professor details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "professor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "66cf26fc858342d14a49f2be"
                        },
                        "userId": {
                          "type": "string",
                          "example": "66cf2c0df4002574697e13a7"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "courses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "66cf26fc858342d14a49f2be"
                              },
                              "title": {
                                "type": "string",
                                "example": "66cf26fc858342d14a49f2be"
                              }
                            }
                          }
                        },
                        "officeLocation": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Professor not found"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      },
      "put": {
        "tags": ["professor"],
        "summary": "Update professor details",
        "description": "Update a professor's details. Accessible by admins or the professor themselves.",
        "operationId": "updateProfessor",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "\n\n**The ID used in this endpoint is an example.** To use this endpoint correctly, you must provide one that is present in the database. In this case it is the **entity ID**, Professor.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66cf26fc858342d14a49f2bf"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "Jane"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Smith"
                  },
                  "courses": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["66cf26fc858342d14a49f2ba"]
                  },
                  "officeLocation": {
                    "type": "string",
                    "example": "Room 110"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Professor updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Professor updated successfully"
                    },
                    "professor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "66cf26fc858342d14a49f2bf"
                        },
                        "userId": {
                          "type": "string",
                          "example": "66cf2c0df4002574697e13bd"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Jane"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Smith"
                        },
                        "courses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "66cf26fc858342d14a49f2ba"
                              },
                              "title": {
                                "type": "string",
                                "example": "Mathematics"
                              }
                            }
                          }
                        },
                        "officeLocation": {
                          "type": "string",
                          "example": "Room 110"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error occurred"
          },
          "403": {
            "description": "Access denied. Admins only"
          },
          "404": {
            "description": "Professor not found"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      },
      "delete": {
        "tags": ["professor"],
        "summary": "Delete a professor",
        "description": "Delete a professor by ID. Only accessible by admins.",
        "operationId": "deleteProfessor",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "\n\n**The ID used in this endpoint is an example.** To use this endpoint correctly, you must provide one that is present in the database. In this case it is the **entity ID**, Professor.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66cf2c0df4002574697e13b9"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Professor deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Professor deleted successfully"
                    },
                    "professor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "66cf2c0df4002574697e13b9"
                        },
                        "userId": {
                          "type": "string",
                          "example": "6cf2c0df4002574697e13c3"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "courses": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "66cf2c0df4002574697e13b7"
                          }
                        },
                        "officeLocation": {
                          "type": "string",
                          "example": "Room 105"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied. Admins only"
          },
          "404": {
            "description": "Professor not found"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/professor/list": {
      "get": {
        "tags": ["professor"],
        "summary": "List all professors",
        "description": "Retrieve a list of all professors with pagination.",
        "operationId": "listProfessors",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of users to return",
            "schema": {
              "type": "integer",
              "enum": [5, 10, 30]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Professors listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Professors listed successfully"
                    },
                    "totalProfessors": {
                      "type": "integer",
                      "example": "5"
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": "1"
                    },
                    "currentPage": {
                      "type": "integer",
                      "example": "1"
                    },
                    "professors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "66cf2c0df4002574697e13bb"
                          },
                          "userId": {
                            "type": "string",
                            "example": "66cf2c0df4002574697e13b6"
                          },
                          "firstName": {
                            "type": "string",
                            "example": "John"
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "courses": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "66cf2c0df4002574697e13bd"
                                },
                                "title": {
                                  "type": "string",
                                  "example": "Biology"
                                }
                              }
                            }
                          },
                          "officeLocation": {
                            "type": "string",
                            "example": "Room 105"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid limit or page parameter"
          },
          "404": {
            "description": "No records found for the requested page. Ensure that the page number is within the valid range"
          },
          "409": {
            "description": "User is already a professor"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/student": {
      "post": {
        "tags": ["student"],
        "summary": "Create a new student",
        "description": "Create a new student record. Only accessible by admins.",
        "operationId": "createStudent",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "example": "66cf2c0df4002574697e13b1"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "New"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Student"
                  },
                  "courses": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "66cf2c0df4002574697e13b3"
                    }
                  }
                },
                "required": [
                  "userId",
                  "firstName",
                  "lastName"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Student created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "student": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "66cf2c0df40025746943iu73"
                        },
                        "userId": {
                          "type": "string",
                          "example": "66cf2c0df4002574697e13b1"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "New"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Student"
                        },
                        "enrollmentNumber": {
                          "type": "string",
                          "example": "ENR20240828511394"
                        },
                        "courses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "66cf2c0df4002574697e13b3"
                              },
                              "title": {
                                "type": "string",
                                "example": "Chemistry"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error occurred"
          },
          "403": {
            "description": "Access denied. Admins only"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/student/{enrollmentNumber}": {
      "get": {
        "tags": ["student"],
        "summary": "Get student details",
        "description": "Retrieve details of a student by their enrollment number. Accessible by any authenticated user.",
        "operationId": "getStudent",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "enrollmentNumber",
            "in": "path",
            "description": "\n\n**The enrollment number used in this endpoint is an example.** To use this endpoint correctly, you must provide one that is present in the database.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ENR20240828511394"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "student": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "66cf2c0df4002574697e13bf"
                        },
                        "userId": {
                          "type": "string",
                          "example": "66cf26fc858342d14a49f2be"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Mike"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Taylor"
                        },
                        "enrollmentNumber": {
                          "type": "string",
                          "example":  "ENR20240828511394"
                        },
                        "courses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "66cf26fc858342d14a49f2b5"
                              },
                              "title": {
                                "type": "string",
                                "example": "Chemistry"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Student not found"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      },
      "put": {
        "tags": ["student"],
        "summary": "Update student details",
        "description": "Update details of a student by their enrollment number. Accessible by admins or the student themselves.",
        "operationId": "updateStudent",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "enrollmentNumber",
            "in": "path",
            "description": "\n\n**The enrollment number used in this endpoint is an example.** To use this endpoint correctly, you must provide one that is present in the database.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ENR20240828511394"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "Mike"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Taylor"
                  },
                  "courses": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["66cf2c0df4002574697e13b3"]
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Student updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "student": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "66cf26fc858342d14a49f2b8"
                        },
                        "userId": {
                          "type": "string",
                          "example": "66cf26fc858342d14a49f2ba"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Mike"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Taylor"
                        },
                        "enrollmentNumber": {
                          "type": "string",
                          "example": "ENR20240828511394"
                        },
                        "courses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "66cf2c0df4002574697e13b3"
                              },
                              "title": {
                                "type": "string",
                                "example": "Chemistry"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error occurred"
          },
          "403": {
            "description": "Access denied. Admins only"
          },
          "404": {
            "description": "Student not found"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      },
      "delete": {
        "tags": ["student"],
        "summary": "Delete a student",
        "description": "Delete a student record by enrollment number. Only accessible by admins.",
        "operationId": "deleteStudent",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "enrollmentNumber",
            "in": "path",
           "description": "\n\n**The enrollment number used in this endpoint is an example.** To use this endpoint correctly, you must provide one that is present in the database.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ENR20240828932503"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Student deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied. Admins only"
          },
          "404": {
            "description": "Student not found"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/student/list": {
      "get": {
        "tags": ["student"],
        "summary": "List all students",
        "description": "Retrieve a paginated list of all students. Accessible by any user.",
        "operationId": "listStudents",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of users to return",
            "schema": {
              "type": "integer",
              "enum": [5, 10, 30]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of students list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successful retrieval of students list"
                    },
                    "totalStudents": {
                      "type": "integer",
                      "example": "5"
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": "1"
                    },
                    "currentPage": {
                      "type": "integer",
                      "example": "1"
                    },
                    "students": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "66ce82472f34ff599a6acb26"
                          },
                          "userId": {
                            "type": "string",
                            "example": "66ce83406d631c28dd300feb"
                          },
                          "firstName": {
                            "type": "string",
                            "example": "Mike"
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Taylor"
                          },
                          "enrollmentNumber": {
                            "type": "string",
                            "example": "ENR20240828511394"
                          },
                          "courses": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "66cf26fc858342d14a49f2b8"
                                },
                                "title": {
                                  "type": "string",
                                  "example": "Mathematics"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid limit or page parameter"
          },
          "404": {
            "description": "No records found for the requested page. Ensure that the page number is within the valid range"
          },
          "409": {
            "description": "There is no student registered in the system"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/course": {
      "post": {
        "tags": ["course"],
        "summary": "Create a new course",
        "description": "Create a new course record. Only accessible by admins.",
        "operationId": "createCourse",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Back-End"
                  },
                  "department": {
                    "type": "string",
                    "example": "Engineering"
                  },
                  "capacity": {
                    "type": "integer",
                    "example": "25"
                  }
                },
                "required": [
                  "title",
                  "department",
                  "capacity"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Course created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Course created successfully"
                    },
                    "course": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "66cf26fc858342d14a49f2be"
                        },
                        "title": {
                          "type": "string",
                          "example": "Back-End"
                        },
                        "department": {
                          "type": "string",
                          "example": "Engineering"
                        },
                        "capacity": {
                          "type": "integer",
                          "example": "25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error occurred"
          },
          "403": {
            "description": "Access denied. Admins only"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/course/{id}": {
      "get": {
        "tags": ["course"],
        "summary": "Get course details",
        "description": "Retrieve details of a course by its ID. Accessible by any user.",
        "operationId": "getCourse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "\n\n**The ID used in this endpoint is an example.** To use this endpoint correctly, you must provide one that is present in the database. In this case it is the **entity ID**, Course.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66cf2c0df4002574697e13b4"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "course": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "66cf2c0df4002574697e13b4"
                        },
                        "title": {
                          "type": "string",
                          "example": "Back-End"
                        },
                        "department": {
                          "type": "string",
                          "example": "Engineering"
                        },
                        "professors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "66cf26fc858342d14a49f2be"
                              },
                              "name": {
                                "type": "string",
                                "example": "John Doe"
                              }
                            }
                          }
                        },
                        "students": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "66cf2c0df40025746943iu73"
                              },
                              "name": {
                                "type": "string",
                                "example": "Mike Taylor"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "integer",
                          "example": "25"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      },
      "put": {
        "tags": ["course"],
        "summary": "Update course details",
        "description": "Update details of a course by its ID. Only accessible by admins.",
        "operationId": "updateCourse",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "\n\n**The ID used in this endpoint is an example.** To use this endpoint correctly, you must provide one that is present in the database. In this case it is the **entity ID**, Course.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66cf2c0df4002574697e13b4"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Physics"
                  },
                  "department": {
                    "type": "string",
                    "example": "Science"
                  },
                  "capacity": {
                    "type": "integer",
                    "example": "30"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Course updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Course updated successfully"
                    },
                    "course": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "66cf2c0df4002574697e13b4"
                        },
                        "title": {
                          "type": "string",
                          "example": "Physics"
                        },
                        "department": {
                          "type": "string",
                          "example": "Science"
                        },
                        "capacity": {
                          "type": "integer",
                          "example": "30"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error occurred"
          },
          "403": {
            "description": "Access denied. Admins only"
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      },
      "delete": {
        "tags": ["course"],
        "summary": "Delete a course",
        "description": "Delete a course record by ID. Only accessible by admins.",
        "operationId": "deleteCourse",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "\n\n**The ID used in this endpoint is an example.** To use this endpoint correctly, you must provide one that is present in the database. In this case it is the **entity ID**, Course.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66cf2c0df4002574697e13b3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Course deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied. Admins only"
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/course/list": {
      "get": {
        "tags": ["course"],
        "summary": "List all courses",
        "description": "Retrieve a paginated list of all courses. Accessible by any user.",
        "operationId": "listCourses",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of users to return",
            "schema": {
              "type": "integer",
              "enum": [5, 10, 30]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of courses list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successful retrieval of courses list"
                    },
                    "totalCourses": {
                      "type": "integer",
                      "example": "5"
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": "1"
                    },
                    "currentPage": {
                      "type": "integer",
                      "example": "1"
                    },
                    "courses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "66ce83406d631c28dd300feb"
                          },
                          "title": {
                            "type": "string",
                            "example": "Physics"
                          },
                          "department": {
                            "type": "string",
                            "example": "Science"
                          },
                          "capacity": {
                            "type": "integer",
                            "example": "25"
                          },
                          "students": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "66cf26fc858342d14a49f2b8"
                                },
                                "name": {
                                  "type": "string",
                                  "exemple": "Mike Taylor"
                                }
                              }
                            }
                          },
                          "professors": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "66cf26fc858342d14a49f2be"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "John Doe"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid limit or page parameter"
          },
          "404": {
            "description": "No records found for the requested page. Ensure that the page number is within the valid range"
          },
          "409": {
            "description": "Invalid limit or page parameter"
          },
          "500": {
            "description": "There is no course registered in the system"
          }
        }
      }
    },
    "/course/summary/info-course": {
      "get": {
        "tags": ["course"],
        "summary": "Get course summary",
        "description": "Retrieve a summary of students distribution and average course capacity.",
        "operationId": "getCourseSummary",
        "responses": {
          "200": {
            "description": "Successful retrieval of course summary",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successful retrieval of course summary"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "studentsPerCourse": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "66cf26fc858342d14a49f2b5"
                              },
                              "title": {
                                "type": "string",
                                "example": "Back-End"
                              },
                              "department": {
                                "type": "string",
                                "example": "Engineering"
                              },
                              "totalStudents": {
                                "type": "integer",
                                "example": "25"
                              }
                            }
                          }
                        },
                        "studentsPerDepartment": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "department": {
                                "type": "string",
                                "example": "Engineering"
                              },
                              "totalStudents": {
                                "type": "integer",
                                "example": "5"
                              }
                            }
                          }
                        },
                        "averageCapacity": {
                          "type": "number",
                          "format": "float"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    }
  }
}